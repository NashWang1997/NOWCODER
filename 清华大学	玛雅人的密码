//https://www.nowcoder.com/practice/761fc1e2f03742c2aa929c19ba96dbb0?tpId=40&tqId=21343&tPage=5&rp=5&ru=/ta/kaoyan&qru=/ta/kaoyan/question-ranking
#include <iostream>
#include <queue>
#include <string>
#include <map>
using namespace std;

bool exist(string test, int N)
{
	int i;
	for (i=0; i+3<N; ++i)
		if (test[i]=='2' && test[i+1]=='0' && test[i+2]=='1' && test[i+3]=='2') return true;
	return false;
}

int main()
{
	int N;
	while (cin >> N) {
		string str;
		cin >> str;
		int i;
		int cnt[3];
		for (i=0; i<3; ++i) cnt[i] = 0;
		for (i=0; i<N; ++i) {
			if (str[i] == '0') cnt[0]++;
			else if (str[i] == '1') cnt[1]++;
			else cnt[2]++;
		}
		if (cnt[0]==0 || cnt[1]==0 || cnt[2]<2) cout << -1 << endl;
		else {
			queue <string> q;
			map <string, int> m;
			q.push(str);
			m[str] = 0;
			while (!q.empty()) {
				string test = q.front();
				if (exist(test, N)) {
					cout << m[test] << endl;
					break;
				}
				else {
					for (i=0; i<N-1; ++i) {
						string pretest = test;
						char tmp = pretest[i];
						pretest[i] = pretest[i+1]; pretest[i+1] = tmp;
						if (m.find(pretest) == m.end()) {
							m[pretest] = m[test] + 1;
							q.push(pretest);
						}
					}
				}
				q.pop();
			}
		}
	}
	return 0;
}
