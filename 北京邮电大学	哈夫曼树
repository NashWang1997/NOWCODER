//https://www.nowcoder.com/practice/162753046d5f47c7aac01a5b2fcda155?tpId=40&tqId=21520&tPage=3&rp=3&ru=/ta/kaoyan&qru=/ta/kaoyan/question-ranking
#include <iostream>
using namespace std;

int cnt = 0;

struct Huffman {
    int value;
    Huffman *lchild, *rchild;
};

void preOrder(Huffman *root, int deep)
{
    if (root != NULL) {
        if (root->lchild==NULL && root->rchild==NULL) {
            cnt += root->value * deep;
        }
        preOrder(root->lchild, deep+1);
        preOrder(root->rchild, deep+1);
    }
}

int main()
{
    int n;
    while (cin >> n) {
        Huffman* nodes[n];
        Huffman *tmp;
        int i, j, weight;
        for (i=0; i<n; ++i) {
            cin >> weight;
            Huffman *node;
            node = new Huffman;
            node->value = weight; node->lchild = NULL; node->rchild = NULL;
            nodes[i] = node;
        }
        bool flag;
        for (i=0; i<n-1; ++i) {
            flag = false;
            for (j=n-1; j>i; --j) {
                if (nodes[j]->value > nodes[j-1]->value) {
                    tmp = nodes[j]; nodes[j] = nodes[j-1]; nodes[j-1] = tmp;
                    flag = true;
                }
            }
            if (!flag) break;
        }
        int len = n;
        while (len > 1) {
        	Huffman *pnode;
            pnode = new Huffman;
            pnode->value = nodes[len-1]->value + nodes[len-2]->value;
            pnode->lchild = nodes[len-1]; pnode->rchild = nodes[len-2];
            len -= 1; i = len - 2;
            while (i>=0 && pnode->value>nodes[i]->value) {
                nodes[i+1] = nodes[i];
                i--;
            }
            nodes[i+1] = pnode;
        }
        Huffman *root;
        root = nodes[0];
        preOrder(root, 0);
        cout << cnt << endl;
    }
    return 0;
}
